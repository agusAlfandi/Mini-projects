// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// model Sample {
//   id        Int      @id @default(autoincrement())
//   name      String
//   code      String   @unique
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   @@map("samples") // if you want to use snake_case format
// }

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  password     String
  role         String
  referralCode String        @unique
  points       Int           @default(0)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  events       Event[]
  transactions Transaction[]
}

model Event {
  id             Int           @id @default(autoincrement())
  name           String
  price          Int
  date           DateTime
  location       String
  description    String
  availableSeats Int
  isFree         Boolean
  organizer      User          @relation(fields: [organizerId], references: [id])
  organizerId    Int
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  transactions   Transaction[]
  reviews        Review[]
}

model Transaction {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  event      Event    @relation(fields: [eventId], references: [id])
  eventId    Int
  quantity   Int
  totalPrice Int
  createdAt  DateTime @default(now())
}

model Review {
  id        Int      @id @default(autoincrement())
  event     Event    @relation(fields: [eventId], references: [id])
  eventId   Int
  rating    Int
  comment   String?
  createdAt DateTime @default(now())
}

model Promotion {
  id         Int      @id @default(autoincrement())
  eventId    Int
  code       String   @unique
  discount   Int
  validUntil DateTime
  createdAt  DateTime @default(now())
}
